syntax = "proto3";
package Xenophobia;
import public "types.proto";

enum ServerMessageType {
	SMT_REGISTER_ANSWER = 0;
	SMT_REGISTER_UPDATE = 1;
	SMT_START_GAME = 2;
	SMT_TIME_SWITCH = 3;
	SMT_VOTING = 4;
	SMT_END_VOTING = 5;
	SMT_CHANGE = 6;
	SMT_INVENTORY_CHANGE = 7;
	SMT_PLAYER_CHANGE = 8;
	SMT_ACTION_REQUEST = 9;
	SMT_ACTION_RESULT = 10;
}

//От сервера:
// Этап регистрации
enum RegisterStatusType {
	NAME_CORRECT = 0;
	NAME_INCORRECT = 1;
	ROLE_CORRECT = 2;
	ROLE_INCORRECT = 3;
}
message RegisterAnswer {
	RegisterStatusType status = 1;
}

message RegisterUpdate {
	map<string, types.Role> players = 1;
}

// Начало игры
message PlayerInfo {
 string name = 1;
  types.PlayerStatus status = 2;
  bool online = 3;
  bool onduty = 4;
  int32 avatar = 5; // TODO: что есть аватар?
  repeated types.Role roles = 6;
}
message StartGame {
	repeated PlayerInfo players = 1;
}

// Смена дня/ночи
enum TimeType {
	NIGHT_TIME = 0;
	DAY_TIME = 1;
}

message TimeSwitch {
	 TimeType time = 1;
	 int32 day_number = 2;
}

// Начало голосования
message Voting {
	types.VotingType type = 1;
	repeated types.ITarget targets = 2;
	map<string, int32> votes_for = 3;
}

// Конец голосования
message EndVoting {
	types.VotingType type = 1;
	types.ITarget target = 2;
	string result = 3;
}

// Список произошедших событий
message Change {
	repeated types.Event events = 1;
}

// События влияющие непосредственно на игрока/требующие от него действий
enum InvetoryChangeType {
	ADD_ITEM = 0;
	CHARGE_ITEM = 1;
	DEL_ITEM = 2;
}

message InvetoryChange {
	 InvetoryChangeType type = 1;
	 types.Item item = 2;
	 int32 charge = 3;
}


enum PlayerChangeType {
	HP_CHANGE = 0;
	ALIEN = 1;
	STATUS_CHANGE = 2;
}

message PlayerChange {
	 PlayerChangeType type = 1;
	 int32 value = 2;
}


enum RequestType {
	HARD_RESOLVE = 0;
	NEED_ROTATION = 1;
}

message ActionRequest {
	RequestType type = 1;
	repeated types.ITarget targets = 2;
}


enum ResultType {
	USED_ITEM = 0;
	USE_ACTION = 1;
}

message ActionResult {
	ResultType type = 1;
	types.Action action = 2;
}

message ServerMessage {

	ServerMessageType type = 1;
	RegisterAnswer register_answer = 2;
	RegisterUpdate register_update = 3;
	StartGame start_game = 4;
	TimeSwitch time_switch = 5;
	Voting voting = 6;
	EndVoting end_voting = 7;
	Change change = 8;
	InvetoryChange inventory_change = 9;
	PlayerChange player_change = 10;
	ActionRequest action_request = 11;
	ActionResult action_result = 12;
}