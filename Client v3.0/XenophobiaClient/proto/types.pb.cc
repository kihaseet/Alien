// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: types.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "types.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace types {

namespace {

const ::google::protobuf::Descriptor* ITarget_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ITarget_reflection_ = NULL;
const ::google::protobuf::Descriptor* Event_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Event_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Role_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Action_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* Item_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* PlayerStatus_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* EventType_descriptor_ = NULL;
const ::google::protobuf::EnumDescriptor* VotingType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_types_2eproto() {
  protobuf_AddDesc_types_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "types.proto");
  GOOGLE_CHECK(file != NULL);
  ITarget_descriptor_ = file->message_type(0);
  static const int ITarget_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ITarget, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ITarget, item_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ITarget, role_),
  };
  ITarget_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ITarget_descriptor_,
      ITarget::default_instance_,
      ITarget_offsets_,
      -1,
      -1,
      -1,
      sizeof(ITarget),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ITarget, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ITarget, _is_default_instance_));
  Event_descriptor_ = file->message_type(1);
  static const int Event_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, event_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, event_object_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, event_target_),
  };
  Event_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Event_descriptor_,
      Event::default_instance_,
      Event_offsets_,
      -1,
      -1,
      -1,
      sizeof(Event),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _internal_metadata_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _is_default_instance_));
  Role_descriptor_ = file->enum_type(0);
  Action_descriptor_ = file->enum_type(1);
  Item_descriptor_ = file->enum_type(2);
  PlayerStatus_descriptor_ = file->enum_type(3);
  EventType_descriptor_ = file->enum_type(4);
  VotingType_descriptor_ = file->enum_type(5);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_types_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ITarget_descriptor_, &ITarget::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Event_descriptor_, &Event::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_types_2eproto() {
  delete ITarget::default_instance_;
  delete ITarget_reflection_;
  delete Event::default_instance_;
  delete Event_reflection_;
}

void protobuf_AddDesc_types_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\013types.proto\022\005types\"M\n\007ITarget\022\014\n\004name\030"
    "\001 \001(\t\022\031\n\004item\030\002 \001(\0162\013.types.Item\022\031\n\004role"
    "\030\003 \001(\0162\013.types.Role\"T\n\005Event\022\037\n\005event\030\001 "
    "\001(\0162\020.types.EventType\022\024\n\014event_object\030\002 "
    "\001(\t\022\024\n\014event_target\030\003 \001(\t*\315\001\n\004Role\022\r\n\tPA"
    "SSENGER\020\000\022\013\n\007CAPTAIN\020\001\022\n\n\006DOCTOR\020\002\022\n\n\006GU"
    "NMEN\020\003\022\014\n\010ENGINEER\020\004\022\r\n\tSCIENTIST\020\005\022\r\n\tS"
    "IGNALMEN\020\006\022\r\n\tASSISTANT\020e\022\016\n\nDEP_DOCTOR\020"
    "f\022\016\n\nDEP_GUNMEN\020g\022\020\n\014DEP_ENGINEER\020h\022\021\n\rD"
    "EP_SCIENTIST\020i\022\021\n\rDEP_SIGNALMEN\020j*m\n\006Act"
    "ion\022\014\n\010USE_ITEM\020\000\022\013\n\007USE_ULT\020\001\022\n\n\006ATTACK"
    "\020\002\022\n\n\006INFECT\020\003\022\010\n\004VOTE\020\004\022\n\n\006UNVOTE\020\005\022\010\n\004"
    "WAIT\020\006\022\006\n\002UP\020\007\022\010\n\004DOWN\020\010*v\n\004Item\022\t\n\005BADG"
    "E\020\000\022\014\n\010ROTATION\020\001\022\013\n\007BLASTER\020\002\022\014\n\010INJECT"
    "OR\020\003\022\014\n\010NOTEBOOK\020\004\022\013\n\007BATTERY\020\005\022\013\n\007SCANN"
    "ER\020\006\022\007\n\003MOP\020\007\022\t\n\005FETUS\020\010*3\n\014PlayerStatus"
    "\022\t\n\005PS_UP\020\000\022\013\n\007PS_DOWN\020\001\022\013\n\007PS_DEAD\020\002*\234\001"
    "\n\tEventType\022\017\n\013ET_USE_ITEM\020\000\022\016\n\nET_USE_U"
    "LT\020\001\022\020\n\014ET_USE_BADGE\020\002\022\024\n\020ET_CHANGE_STAT"
    "US\020\003\022\017\n\013ET_GET_ROLE\020\004\022\017\n\013ET_DEL_ROLE\020\005\022\020"
    "\n\014ET_VOTING_UP\020\006\022\022\n\016ET_VOTING_DOWN\020\007*)\n\n"
    "VotingType\022\014\n\010FOR_ROLE\020\000\022\r\n\tFOR_ALIEN\020\001b"
    "\006proto3", 887);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "types.proto", &protobuf_RegisterTypes);
  ITarget::default_instance_ = new ITarget();
  Event::default_instance_ = new Event();
  ITarget::default_instance_->InitAsDefaultInstance();
  Event::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_types_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_types_2eproto {
  StaticDescriptorInitializer_types_2eproto() {
    protobuf_AddDesc_types_2eproto();
  }
} static_descriptor_initializer_types_2eproto_;
const ::google::protobuf::EnumDescriptor* Role_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Role_descriptor_;
}
bool Role_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 101:
    case 102:
    case 103:
    case 104:
    case 105:
    case 106:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Action_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Action_descriptor_;
}
bool Action_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* Item_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Item_descriptor_;
}
bool Item_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* PlayerStatus_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PlayerStatus_descriptor_;
}
bool PlayerStatus_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* EventType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return EventType_descriptor_;
}
bool EventType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

const ::google::protobuf::EnumDescriptor* VotingType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return VotingType_descriptor_;
}
bool VotingType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}


namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ITarget::kNameFieldNumber;
const int ITarget::kItemFieldNumber;
const int ITarget::kRoleFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ITarget::ITarget()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:types.ITarget)
}

void ITarget::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

ITarget::ITarget(const ITarget& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:types.ITarget)
}

void ITarget::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  item_ = 0;
  role_ = 0;
}

ITarget::~ITarget() {
  // @@protoc_insertion_point(destructor:types.ITarget)
  SharedDtor();
}

void ITarget::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void ITarget::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ITarget::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ITarget_descriptor_;
}

const ITarget& ITarget::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_types_2eproto();
  return *default_instance_;
}

ITarget* ITarget::default_instance_ = NULL;

ITarget* ITarget::New(::google::protobuf::Arena* arena) const {
  ITarget* n = new ITarget;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ITarget::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<ITarget*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(item_, role_);
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());

#undef ZR_HELPER_
#undef ZR_

}

bool ITarget::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:types.ITarget)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "types.ITarget.name"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_item;
        break;
      }

      // optional .types.Item item = 2;
      case 2: {
        if (tag == 16) {
         parse_item:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_item(static_cast< ::types::Item >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_role;
        break;
      }

      // optional .types.Role role = 3;
      case 3: {
        if (tag == 24) {
         parse_role:
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_role(static_cast< ::types::Role >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:types.ITarget)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:types.ITarget)
  return false;
#undef DO_
}

void ITarget::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:types.ITarget)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "types.ITarget.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional .types.Item item = 2;
  if (this->item() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      2, this->item(), output);
  }

  // optional .types.Role role = 3;
  if (this->role() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      3, this->role(), output);
  }

  // @@protoc_insertion_point(serialize_end:types.ITarget)
}

::google::protobuf::uint8* ITarget::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.ITarget)
  // optional string name = 1;
  if (this->name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "types.ITarget.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional .types.Item item = 2;
  if (this->item() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      2, this->item(), target);
  }

  // optional .types.Role role = 3;
  if (this->role() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      3, this->role(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:types.ITarget)
  return target;
}

int ITarget::ByteSize() const {
  int total_size = 0;

  // optional string name = 1;
  if (this->name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->name());
  }

  // optional .types.Item item = 2;
  if (this->item() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->item());
  }

  // optional .types.Role role = 3;
  if (this->role() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->role());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ITarget::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ITarget* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ITarget>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ITarget::MergeFrom(const ITarget& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.name().size() > 0) {

    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  if (from.item() != 0) {
    set_item(from.item());
  }
  if (from.role() != 0) {
    set_role(from.role());
  }
}

void ITarget::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ITarget::CopyFrom(const ITarget& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ITarget::IsInitialized() const {

  return true;
}

void ITarget::Swap(ITarget* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ITarget::InternalSwap(ITarget* other) {
  name_.Swap(&other->name_);
  std::swap(item_, other->item_);
  std::swap(role_, other->role_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ITarget::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ITarget_descriptor_;
  metadata.reflection = ITarget_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ITarget

// optional string name = 1;
void ITarget::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& ITarget::name() const {
  // @@protoc_insertion_point(field_get:types.ITarget.name)
  return name_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ITarget::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:types.ITarget.name)
}
 void ITarget::set_name(const char* value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:types.ITarget.name)
}
 void ITarget::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:types.ITarget.name)
}
 ::std::string* ITarget::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:types.ITarget.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* ITarget::release_name() {
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void ITarget::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:types.ITarget.name)
}

// optional .types.Item item = 2;
void ITarget::clear_item() {
  item_ = 0;
}
 ::types::Item ITarget::item() const {
  // @@protoc_insertion_point(field_get:types.ITarget.item)
  return static_cast< ::types::Item >(item_);
}
 void ITarget::set_item(::types::Item value) {
  
  item_ = value;
  // @@protoc_insertion_point(field_set:types.ITarget.item)
}

// optional .types.Role role = 3;
void ITarget::clear_role() {
  role_ = 0;
}
 ::types::Role ITarget::role() const {
  // @@protoc_insertion_point(field_get:types.ITarget.role)
  return static_cast< ::types::Role >(role_);
}
 void ITarget::set_role(::types::Role value) {
  
  role_ = value;
  // @@protoc_insertion_point(field_set:types.ITarget.role)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kEventFieldNumber;
const int Event::kEventObjectFieldNumber;
const int Event::kEventTargetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:types.Event)
}

void Event::InitAsDefaultInstance() {
  _is_default_instance_ = true;
}

Event::Event(const Event& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:types.Event)
}

void Event::SharedCtor() {
    _is_default_instance_ = false;
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  event_ = 0;
  event_object_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_target_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

Event::~Event() {
  // @@protoc_insertion_point(destructor:types.Event)
  SharedDtor();
}

void Event::SharedDtor() {
  event_object_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_target_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void Event::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Event::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Event_descriptor_;
}

const Event& Event::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_types_2eproto();
  return *default_instance_;
}

Event* Event::default_instance_ = NULL;

Event* Event::New(::google::protobuf::Arena* arena) const {
  Event* n = new Event;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Event::Clear() {
  event_ = 0;
  event_object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  event_target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool Event::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:types.Event)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .types.EventType event = 1;
      case 1: {
        if (tag == 8) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          set_event(static_cast< ::types::EventType >(value));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_event_object;
        break;
      }

      // optional string event_object = 2;
      case 2: {
        if (tag == 18) {
         parse_event_object:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_object()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_object().data(), this->event_object().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "types.Event.event_object"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_event_target;
        break;
      }

      // optional string event_target = 3;
      case 3: {
        if (tag == 26) {
         parse_event_target:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_event_target()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->event_target().data(), this->event_target().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "types.Event.event_target"));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:types.Event)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:types.Event)
  return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:types.Event)
  // optional .types.EventType event = 1;
  if (this->event() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->event(), output);
  }

  // optional string event_object = 2;
  if (this->event_object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_object().data(), this->event_object().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "types.Event.event_object");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->event_object(), output);
  }

  // optional string event_target = 3;
  if (this->event_target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_target().data(), this->event_target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "types.Event.event_target");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->event_target(), output);
  }

  // @@protoc_insertion_point(serialize_end:types.Event)
}

::google::protobuf::uint8* Event::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:types.Event)
  // optional .types.EventType event = 1;
  if (this->event() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->event(), target);
  }

  // optional string event_object = 2;
  if (this->event_object().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_object().data(), this->event_object().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "types.Event.event_object");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->event_object(), target);
  }

  // optional string event_target = 3;
  if (this->event_target().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->event_target().data(), this->event_target().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "types.Event.event_target");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        3, this->event_target(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:types.Event)
  return target;
}

int Event::ByteSize() const {
  int total_size = 0;

  // optional .types.EventType event = 1;
  if (this->event() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::EnumSize(this->event());
  }

  // optional string event_object = 2;
  if (this->event_object().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_object());
  }

  // optional string event_target = 3;
  if (this->event_target().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->event_target());
  }

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Event* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Event>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Event::MergeFrom(const Event& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from.event() != 0) {
    set_event(from.event());
  }
  if (from.event_object().size() > 0) {

    event_object_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_object_);
  }
  if (from.event_target().size() > 0) {

    event_target_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.event_target_);
  }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Event::IsInitialized() const {

  return true;
}

void Event::Swap(Event* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
  std::swap(event_, other->event_);
  event_object_.Swap(&other->event_object_);
  event_target_.Swap(&other->event_target_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Event_descriptor_;
  metadata.reflection = Event_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Event

// optional .types.EventType event = 1;
void Event::clear_event() {
  event_ = 0;
}
 ::types::EventType Event::event() const {
  // @@protoc_insertion_point(field_get:types.Event.event)
  return static_cast< ::types::EventType >(event_);
}
 void Event::set_event(::types::EventType value) {
  
  event_ = value;
  // @@protoc_insertion_point(field_set:types.Event.event)
}

// optional string event_object = 2;
void Event::clear_event_object() {
  event_object_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Event::event_object() const {
  // @@protoc_insertion_point(field_get:types.Event.event_object)
  return event_object_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Event::set_event_object(const ::std::string& value) {
  
  event_object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:types.Event.event_object)
}
 void Event::set_event_object(const char* value) {
  
  event_object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:types.Event.event_object)
}
 void Event::set_event_object(const char* value, size_t size) {
  
  event_object_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:types.Event.event_object)
}
 ::std::string* Event::mutable_event_object() {
  
  // @@protoc_insertion_point(field_mutable:types.Event.event_object)
  return event_object_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Event::release_event_object() {
  
  return event_object_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Event::set_allocated_event_object(::std::string* event_object) {
  if (event_object != NULL) {
    
  } else {
    
  }
  event_object_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_object);
  // @@protoc_insertion_point(field_set_allocated:types.Event.event_object)
}

// optional string event_target = 3;
void Event::clear_event_target() {
  event_target_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 const ::std::string& Event::event_target() const {
  // @@protoc_insertion_point(field_get:types.Event.event_target)
  return event_target_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Event::set_event_target(const ::std::string& value) {
  
  event_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:types.Event.event_target)
}
 void Event::set_event_target(const char* value) {
  
  event_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:types.Event.event_target)
}
 void Event::set_event_target(const char* value, size_t size) {
  
  event_target_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:types.Event.event_target)
}
 ::std::string* Event::mutable_event_target() {
  
  // @@protoc_insertion_point(field_mutable:types.Event.event_target)
  return event_target_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* Event::release_event_target() {
  
  return event_target_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void Event::set_allocated_event_target(::std::string* event_target) {
  if (event_target != NULL) {
    
  } else {
    
  }
  event_target_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), event_target);
  // @@protoc_insertion_point(field_set_allocated:types.Event.event_target)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace types

// @@protoc_insertion_point(global_scope)
